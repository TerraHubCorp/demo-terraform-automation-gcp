component:
  name: google_function
  mapping:
    - .
  dependsOn:
    - ../google_storage
  template:
    terraform:
      backend:
        local:
          path: /tmp/.terrahub/local_backend/google_function/terraform.tfstate
    data:
      terraform_remote_state:
        storage:
          backend: local
          config:
            path: /tmp/.terrahub/local_backend/demo_storage_bucket/terraform.tfstate
    resource:
      google_storage_bucket_object:
        google_storage_object:
          name: deploy/google_function/1551790491.zip
          bucket: '${data.terraform_remote_state.storage.thub_id}'
          source: ./demo.zip
      google_cloudfunctions_function:
        google_function:
<<<<<<< HEAD:google_function/.terrahub.yml
          depends_on:
            - google_storage_bucket_object.google_storage_object
          name: 'demofunction${local.project["code"]}'
=======
          name: 'demofunction${local.project["code"]}'
          depends_on:
            - google_storage_bucket_object.google_storage_object
>>>>>>> 954e40474032055d4b4f929cfdbe7991e50c8e39:google_function/.terrahub.yml
          region: us-central1
          runtime: nodejs8
          description: My demo function
          available_memory_mb: 128
          source_archive_bucket: '${data.terraform_remote_state.storage.thub_id}'
          source_archive_object: '${google_storage_bucket_object.google_storage_object.name}'
          trigger_http: true
          timeout: 60
          entry_point: helloGET
<<<<<<< HEAD:google_function/.terrahub.yml
=======
      google_storage_bucket_object:
        google_storage_object:
          name: demo.zip
          bucket: '${data.terraform_remote_state.storage.thub_id}'
          source: ./demo.zip
    terraform:
      backend:
        local:
          path: /tmp/.terrahub/local_backend/google_function/terraform.tfstate
    data:
      terraform_remote_state:
        storage:
          backend: local
          config:
            path: /tmp/.terrahub/local_backend/google_storage/terraform.tfstate
>>>>>>> 954e40474032055d4b4f929cfdbe7991e50c8e39:google_function/.terrahub.yml
    output:
      id:
        value: '${google_cloudfunctions_function.google_function.id}'
      trigger_url:
        value: '${google_cloudfunctions_function.google_function.https_trigger_url}'
build:
  env:
    variables:
      THUB_FUNCTION_ZIP: demo.zip
      THUB_FUNCTION_TXT: demo.txt
      COMPONENT_NAME: google_function
      OBJECT_NAME: google_storage_object
      THUB_BUILD_PATH: ..
      THUB_BUILD_OK: false
      THUB_BUCKET_PATH: 'gs://demo_storage_bucket_99999999'
      THUB_BUCKET_KEY: deploy/google_function
  phases:
    pre_build:
      commands:
        - 'echo "BUILD: Running pre_build step"'
        - >-
          ./scripts/download.sh $THUB_FUNCTION_TXT
          $THUB_BUCKET_PATH/$THUB_BUCKET_KEY/$THUB_FUNCTION_TXT
        - ./scripts/compare.sh $THUB_FUNCTION_TXT $THUB_BUILD_PATH/*.js
      finally:
        - 'echo "BUILD: pre_build step successful"'
    build:
      commands:
        - 'echo "BUILD: Running build step"'
<<<<<<< HEAD:google_function/.terrahub.yml
        - ./scripts/build.sh $COMPONENT_NAME $OBJECT_NAME $THUB_BUCKET_KEY/
=======
        - >-
          if [ "$(head -n 1 "$THUB_FUNCTION_TXT")" != "$(stat -c %y
          "${THUB_BUILD_PATH}/index.js")" ]; then zip -j ${THUB_FUNCTION_ZIP}
          ${THUB_BUILD_PATH}/index.js; fi
        - >-
          if [ "$(head -n 1 "$THUB_FUNCTION_TXT")" != "$(stat -c %y
          "${THUB_BUILD_PATH}/index.js")" ]; then terrahub configure -i
          google_function -c
          component.template.resource.google_storage_bucket_object.google_storage_object.name=$(date
          +%s).zip; fi
>>>>>>> 954e40474032055d4b4f929cfdbe7991e50c8e39:google_function/.terrahub.yml
      finally:
        - 'echo "BUILD: build step successful"'
    post_build:
      commands:
        - 'echo "BUILD: Running post_build step"'
        - ./scripts/shasum.sh $THUB_FUNCTION_TXT
        - ./scripts/zip.sh $THUB_FUNCTION_ZIP $THUB_BUILD_PATH/*.js
        - >-
          ./scripts/upload.sh $THUB_FUNCTION_TXT
          $THUB_BUCKET_PATH/$THUB_BUCKET_KEY/$THUB_FUNCTION_TXT
        - rm -f .terrahub_build.env $THUB_FUNCTION_TXT
      finally:
        - 'echo "BUILD: post_build step successful"'
